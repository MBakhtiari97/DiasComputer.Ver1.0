// <auto-generated />
using System;
using DiasComputer.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiasComputer.DataLayer.Migrations
{
    [DbContext(typeof(DiasComputerContext))]
    [Migration("20220427044053_Mig_AddPostDetailsTable")]
    partial class Mig_AddPostDetailsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Groups.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"), 1L, 1);

                    b.Property<string>("GroupTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Groups.ProductToGroup", b =>
                {
                    b.Property<int>("PG_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PG_Id"), 1L, 1);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("PG_Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductToGroups");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.Authors.MagAuthor", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AuthorAvatar")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AuthorPhone")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.Groups.MagGroups", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"), 1L, 1);

                    b.Property<string>("GroupTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("MagGroups");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.Groups.MagToGroup", b =>
                {
                    b.Property<int>("MG_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MG_Id"), 1L, 1);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("MagId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("MG_Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MagId");

                    b.ToTable("MagToGroups");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.Mag", b =>
                {
                    b.Property<int>("MagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagId"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MagDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MagImg")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MagShortDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MagTitle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("WrittenAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MagId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Mags");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.MagReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsAnswered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MagId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReviewName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.Property<string>("ReviewWebsite")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("ReviewId");

                    b.HasIndex("MagId");

                    b.HasIndex("ParentId");

                    b.ToTable("MagReviews");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.MagTags", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"), 1L, 1);

                    b.Property<int>("MagId")
                        .HasColumnType("int");

                    b.Property<string>("TagTitle")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.HasKey("TagId");

                    b.HasIndex("MagId")
                        .IsUnique();

                    b.ToTable("MagTags");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.MagVisitor", b =>
                {
                    b.Property<int>("MV_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MV_Id"), 1L, 1);

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MagId")
                        .HasColumnType("int");

                    b.HasKey("MV_Id");

                    b.HasIndex("MagId");

                    b.ToTable("MagVisitors");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.MagVote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoteId"), 1L, 1);

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MagId")
                        .HasColumnType("int");

                    b.Property<bool>("Vote")
                        .HasColumnType("bit");

                    b.Property<DateTime>("VoteDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VoteId");

                    b.HasIndex("MagId");

                    b.ToTable("MagVotes");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.SiteResources.MagBanner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerId"), 1L, 1);

                    b.Property<string>("BannerAlt")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BannerImg")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BannerSize")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BannerId");

                    b.ToTable("MagBanners");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.SiteResources.MagNewsletter", b =>
                {
                    b.Property<int>("MN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MN_Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MN_Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MN_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MN_Id");

                    b.ToTable("MagNewsletters");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.SiteResources.MagTicket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<string>("TicketDescription")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TicketSenderEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TicketSenderIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TicketSenderName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TicketTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TicketId");

                    b.ToTable("MagTickets");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<bool>("IsFinally")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderSum")
                        .HasColumnType("int");

                    b.Property<int?>("ShippingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ShippingId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.OrderDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"), 1L, 1);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Warranty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.ReferOrder", b =>
                {
                    b.Property<int>("ReferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferId"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ReferCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ReferSubmitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReferId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("ReferOrders");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.Shipping", b =>
                {
                    b.Property<int>("ShippingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingId"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.HasKey("ShippingId");

                    b.ToTable("Shipping");

                    b.HasData(
                        new
                        {
                            ShippingId = 1,
                            CityName = "تهران",
                            Cost = 0
                        },
                        new
                        {
                            ShippingId = 2,
                            CityName = "غیره",
                            Cost = 20000
                        });
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.TransactionHistory", b =>
                {
                    b.Property<int>("TH_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TH_Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TH_Id");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasFilter("[OrderId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHistories");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.TransactionToType", b =>
                {
                    b.Property<int>("TT_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TT_Id"), 1L, 1);

                    b.Property<int>("TH_Id")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("TT_Id");

                    b.HasIndex("TH_Id");

                    b.HasIndex("TypeId");

                    b.ToTable("TransactionToTypes");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.TransactionType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<string>("TypeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            TypeTitle = "واریز"
                        },
                        new
                        {
                            TypeId = 2,
                            TypeTitle = "برداشت"
                        });
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("BrandDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Coupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponId"), 1L, 1);

                    b.Property<DateTime>("ActiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveTill")
                        .HasColumnType("datetime2");

                    b.Property<string>("CouponCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CouponPercent")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CouponId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureId"), 1L, 1);

                    b.Property<string>("FeatureDescription")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.Property<string>("FeatureTitle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("FeatureId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Gallery", b =>
                {
                    b.Property<int>("GalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GalleryId"), 1L, 1);

                    b.Property<string>("ImgName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("GalleryId");

                    b.HasIndex("ProductId");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AvailableCount")
                        .HasColumnType("int");

                    b.Property<bool>("AvailableStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("bit");

                    b.Property<string>("ProductImg")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.Property<int?>("SaleCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SaleEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SalePercent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SaleStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("WarrantyId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("WarrantyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.ProductToCoupon", b =>
                {
                    b.Property<int>("PC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PC_Id"), 1L, 1);

                    b.Property<int>("CouponId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("PC_Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductToCoupons");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.ProductVote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoteId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Vote")
                        .HasColumnType("bit");

                    b.Property<DateTime>("VoteDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VoteId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductVotes");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<bool?>("IsAnswered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.HasKey("TagId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Warranty", b =>
                {
                    b.Property<int>("WarrantyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarrantyId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("WarrantyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("WarrantyPeriod")
                        .HasColumnType("int");

                    b.HasKey("WarrantyId");

                    b.ToTable("Warranties");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.SiteResources.Banner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerId"), 1L, 1);

                    b.Property<string>("BannerAltName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BannerImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerPosition")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BannerRedirectTo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BannerSize")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.SiteResources.Logo", b =>
                {
                    b.Property<int>("LogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogoId"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("LogoImg")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LogoTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LogoId");

                    b.HasIndex("BrandId")
                        .IsUnique()
                        .HasFilter("[BrandId] IS NOT NULL");

                    b.ToTable("Logos");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.SiteResources.SiteContactDetail", b =>
                {
                    b.Property<int>("SCD_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SCD_Id"), 1L, 1);

                    b.Property<string>("SCD_TypeTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SCD_Value")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.HasKey("SCD_Id");

                    b.ToTable("SiteContactDetails");

                    b.HasData(
                        new
                        {
                            SCD_Id = 1,
                            SCD_TypeTitle = "شماره تماس",
                            SCD_Value = "09121075852"
                        },
                        new
                        {
                            SCD_Id = 2,
                            SCD_TypeTitle = "شماره تماس",
                            SCD_Value = "0218574123"
                        },
                        new
                        {
                            SCD_Id = 4,
                            SCD_TypeTitle = "آدرس ایمیل",
                            SCD_Value = "Info@DiasComputer.com"
                        },
                        new
                        {
                            SCD_Id = 5,
                            SCD_TypeTitle = "آدرس پستی",
                            SCD_Value = "تهران ، خیابان ولیعصر ، مجتمع نور تهران , طبقه دوم ، پلاک 131"
                        });
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.SiteResources.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTicketAnswered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTicketRead")
                        .HasColumnType("bit");

                    b.Property<string>("TicketSenderEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TicketSenderIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TicketSenderName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TicketSenderPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.NewsLetter", b =>
                {
                    b.Property<int>("NewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsletterId"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("NewsletterId");

                    b.ToTable("NewsLetters");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.PostDetail", b =>
                {
                    b.Property<int>("PD_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PD_Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PD_Id");

                    b.HasIndex("UserId");

                    b.ToTable("PostDetails");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            IsDelete = false,
                            RoleName = "کاربر"
                        },
                        new
                        {
                            RoleId = 2,
                            IsDelete = false,
                            RoleName = "فروشنده"
                        },
                        new
                        {
                            RoleId = 3,
                            IsDelete = false,
                            RoleName = "نویسنده"
                        },
                        new
                        {
                            RoleId = 4,
                            IsDelete = false,
                            RoleName = "مدیر"
                        });
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("BankAccountNumber")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("-");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NationalCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("-");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("-");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserAvatar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("-");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.UserRole", b =>
                {
                    b.Property<int>("UR_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UR_Id"), 1L, 1);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UR_Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.Wallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WalletId"), 1L, 1);

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WalletId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.WishList", b =>
                {
                    b.Property<int>("WishListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishListId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WishListId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Groups.Group", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Groups.Group", "Groups")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Groups.ProductToGroup", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Groups.Group", "Group")
                        .WithMany("ProductToGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("ProductToGroups")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.Groups.MagGroups", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Mag.Groups.MagGroups", "Groups")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.Groups.MagToGroup", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Mag.Groups.MagGroups", "Group")
                        .WithMany("MagToGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Mag.MagItems.Mag", "Mag")
                        .WithMany("MagToGroups")
                        .HasForeignKey("MagId");

                    b.Navigation("Group");

                    b.Navigation("Mag");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.Mag", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Mag.Authors.MagAuthor", "Author")
                        .WithMany("Mags")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.MagReview", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Mag.MagItems.Mag", "Mag")
                        .WithMany("MagReviews")
                        .HasForeignKey("MagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Review", "Reviews")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Mag");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.MagTags", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Mag.MagItems.Mag", "Mag")
                        .WithOne("MagTags")
                        .HasForeignKey("DiasComputer.DataLayer.Entities.Mag.MagItems.MagTags", "MagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mag");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.MagVisitor", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Mag.MagItems.Mag", "Mag")
                        .WithMany("MagVisitors")
                        .HasForeignKey("MagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mag");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.MagVote", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Mag.MagItems.Mag", "Mag")
                        .WithMany("MagVotes")
                        .HasForeignKey("MagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mag");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.Order", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Orders.Shipping", "Shipping")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingId");

                    b.HasOne("DiasComputer.DataLayer.Entities.Users.User", "User")
                        .WithMany("Order")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipping");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.OrderDetail", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Orders.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.ReferOrder", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Orders.Order", "Order")
                        .WithOne("ReferOrder")
                        .HasForeignKey("DiasComputer.DataLayer.Entities.Orders.ReferOrder", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.TransactionHistory", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Orders.Order", "Order")
                        .WithOne("Transaction")
                        .HasForeignKey("DiasComputer.DataLayer.Entities.Orders.TransactionHistory", "OrderId");

                    b.HasOne("DiasComputer.DataLayer.Entities.Users.User", "User")
                        .WithMany("Transaction")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.TransactionToType", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Orders.TransactionHistory", "TransactionHistory")
                        .WithMany("TransactionToType")
                        .HasForeignKey("TH_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Orders.TransactionType", "TransactionType")
                        .WithMany("TransactionToTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionHistory");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Feature", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Feature", "Features")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("Features")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Features");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Gallery", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("Galleries")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Product", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Warranty", "Warranty")
                        .WithMany("Products")
                        .HasForeignKey("WarrantyId");

                    b.Navigation("Brand");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.ProductToCoupon", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Coupon", "Coupon")
                        .WithMany("ProductToCoupons")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("ProductToCoupons")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.ProductVote", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("ProductVotes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Users.User", "User")
                        .WithMany("ProductVotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Review", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Review", "Reviews")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Users.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Reviews");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Tag", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithOne("Tag")
                        .HasForeignKey("DiasComputer.DataLayer.Entities.Products.Tag", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.SiteResources.Logo", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Brand", "Brand")
                        .WithOne("Logo")
                        .HasForeignKey("DiasComputer.DataLayer.Entities.SiteResources.Logo", "BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.PostDetail", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Users.User", "User")
                        .WithMany("PostDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.UserRole", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Users.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Users.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.Wallet", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Users.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("DiasComputer.DataLayer.Entities.Users.Wallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.WishList", b =>
                {
                    b.HasOne("DiasComputer.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("WishLists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiasComputer.DataLayer.Entities.Users.User", "User")
                        .WithMany("WishLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Groups.Group", b =>
                {
                    b.Navigation("ProductToGroups");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.Authors.MagAuthor", b =>
                {
                    b.Navigation("Mags");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.Groups.MagGroups", b =>
                {
                    b.Navigation("MagToGroups");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Mag.MagItems.Mag", b =>
                {
                    b.Navigation("MagReviews");

                    b.Navigation("MagTags");

                    b.Navigation("MagToGroups");

                    b.Navigation("MagVisitors");

                    b.Navigation("MagVotes");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ReferOrder");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.Shipping", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.TransactionHistory", b =>
                {
                    b.Navigation("TransactionToType");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Orders.TransactionType", b =>
                {
                    b.Navigation("TransactionToTypes");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Brand", b =>
                {
                    b.Navigation("Logo");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Coupon", b =>
                {
                    b.Navigation("ProductToCoupons");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Product", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Galleries");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductToCoupons");

                    b.Navigation("ProductToGroups");

                    b.Navigation("ProductVotes");

                    b.Navigation("Reviews");

                    b.Navigation("Tag");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Products.Warranty", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DiasComputer.DataLayer.Entities.Users.User", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("PostDetails");

                    b.Navigation("ProductVotes");

                    b.Navigation("Reviews");

                    b.Navigation("Transaction");

                    b.Navigation("UserRole");

                    b.Navigation("Wallet");

                    b.Navigation("WishLists");
                });
#pragma warning restore 612, 618
        }
    }
}
